name: Publish and commit bottles

run-name: "Publish PR #${{ inputs.pull_request }}"

on:
  workflow_dispatch:
    inputs:
      pull_request:
        description: Pull request number
        required: true
      large_runner:
        description: "Whether to run the upload job on a large runner (default: false)"
        type: boolean
        required: false
        default: false
      commit_bottles_to_pr_branch:
        description: "Whether to push bottle commits to the pull request branch (default: false)"
        type: boolean
        required: false
        default: false
      autosquash:
        description: "Whether to squash the pull request commits according to Homebrew style (default: false)"
        type: boolean
        required: false
        default: false
      warn_on_upload_failure:
        description: "Whether to pass `--warn-on-upload-failure` to `brew pr-pull`. (default: false)"
        type: boolean
        required: false
        default: false
      message:
        description: "Message to include when autosquashing revision bumps, deletions, and rebuilds. Incompatible with autosquash."
        required: false

env:
  GNUPGHOME: /tmp/gnupghome
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_FROM_API: 1
  GH_REPO: ${{github.repository}}
  GH_NO_UPDATE_NOTIFIER: 1
  GH_PROMPT_DISABLED: 1

permissions:
  contents: read

jobs:
  upload:
    runs-on: ${{inputs.large_runner && 'homebrew-large-bottle-upload' || 'ubuntu-22.04'}}
    container:
      image: ghcr.io/homebrew/ubuntu22.04:master
    permissions:
      pull-requests: write
    steps:
      - name: Post comment once started (legacy)
        if: ${{!inputs.commit_bottles_to_pr_branch}}
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          issue: ${{github.event.inputs.pull_request}}
          body: ":shipit: @${{github.actor}} has [triggered a merge](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot_body: ":robot: A scheduled task has [triggered a merge](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot: BrewTestBot

      - name: Post comment once started
        if: inputs.commit_bottles_to_pr_branch
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          issue: ${{github.event.inputs.pull_request}}
          body: ":shipit: @${{github.actor}} has [requested bottles to be published to this PR](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot_body: ":robot: A scheduled task has [requested bottles to be published to this PR](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot: BrewTestBot

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          test-bot: false

      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: ${{steps.set-up-homebrew.outputs.gems-path}}
          key: ${{runner.os}}-rubygems-v2-${{steps.set-up-homebrew.outputs.gems-hash}}
          restore-keys: ${{runner.os}}-rubygems-v2-

      - name: Install gems
        run: brew install-bundler-gems

      - name: Configure Git user
        id: git-user-config
        uses: Homebrew/actions/git-user-config@master
        with:
          username: BrewTestBot

      - name: Set up commit signing
        uses: Homebrew/actions/setup-commit-signing@master
        with:
          signing_key: ${{ secrets.BREWTESTBOT_GPG_SIGNING_SUBKEY }}

      - name: Checkout PR branch
        run: gh pr checkout '${{github.event.inputs.pull_request}}'
        if: inputs.commit_bottles_to_pr_branch
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}

      - name: Pull and upload bottles to GitHub Packages
        env:
          BREWTESTBOT_NAME_EMAIL: "${{ steps.git-user-config.outputs.name }} <${{ steps.git-user-config.outputs.email }}>"
          HOMEBREW_GPG_PASSPHRASE: ${{ secrets.BREWTESTBOT_GPG_SIGNING_SUBKEY_PASSPHRASE }}
          HOMEBREW_GITHUB_API_TOKEN: ${{secrets.HOMEBREW_CORE_PUBLIC_REPO_EMAIL_TOKEN}}
          HOMEBREW_GITHUB_PACKAGES_USER: brewtestbot
          HOMEBREW_GITHUB_PACKAGES_TOKEN: ${{secrets.HOMEBREW_CORE_GITHUB_PACKAGES_TOKEN}}
        run: |
          brew pr-pull \
            --debug \
            --workflows=tests.yml \
            --committer="$BREWTESTBOT_NAME_EMAIL" \
            --root-url="https://ghcr.io/v2/homebrew/core" \
            '${{inputs.autosquash && '--autosquash' || '--clean'}}' \
            '${{inputs.commit_bottles_to_pr_branch && '--no-cherry-pick' || ''}}' \
            '${{inputs.warn_on_upload_failure && '--warn-on-upload-failure' || ''}}' \
            '${{inputs.message && format('--message={0}', inputs.message) || ''}}' \
            '${{github.event.inputs.pull_request}}'

      - name: Get current branch and remote
        id: push-configuration
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}
        run: |
          branch="$(git branch --show-current)"
          if [ -n "$branch" ]
          then
            echo "branch=$branch" >> "$GITHUB_OUTPUT"
          else
            echo "::error ::Not on a branch!"
            exit 1
          fi

          if push_remote="$(git config --local "branch.$branch.pushRemote")"
          then
            echo "remote=$push_remote" >> "$GITHUB_OUTPUT"
          elif remote="$(git config --local "branch.$branch.remote")"
          then
            echo "remote=$remote" >> "$GITHUB_OUTPUT"
          else
            echo "::error ::Could not find branch remote!"
            exit 1
          fi

          force_without_lease='${{inputs.commit_bottles_to_pr_branch && inputs.autosquash}}'
          echo "force_without_lease=$force_without_lease" >> "$GITHUB_OUTPUT"

      - name: Push commits
        uses: Homebrew/actions/git-try-push@master
        with:
          token: ${{secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN}}
          directory: ${{steps.set-up-homebrew.outputs.repository-path}}
          remote: ${{steps.push-configuration.outputs.remote}}
          branch: ${{steps.push-configuration.outputs.branch}}
          force: ${{steps.push-configuration.outputs.force_without_lease}}
          no_lease: ${{steps.push-configuration.outputs.force_without_lease}}
        env:
          GIT_COMMITTER_NAME: ${{ steps.git-user-config.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.git-user-config.outputs.email }}
          HOMEBREW_GPG_PASSPHRASE: ${{ secrets.BREWTESTBOT_GPG_SIGNING_SUBKEY_PASSPHRASE }}

      - name: Post comment on failure
        if: ${{!success()}}
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          issue: ${{github.event.inputs.pull_request}}
          body: ":warning: @${{github.actor}} bottle publish [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot_body: ":warning: Bottle publish [failed](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})."
          bot: BrewTestBot

      - name: Dismiss approvals on failure
        if: ${{!success()}}
        uses: Homebrew/actions/dismiss-approvals@master
        with:
          token: ${{secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN}}
          pr: ${{github.event.inputs.pull_request}}
          message: "bottle publish failed"

      - name: Add CI-published-bottle-commits label
        run: gh pr edit --add-label CI-published-bottle-commits '${{github.event.inputs.pull_request}}'
        if: inputs.commit_bottles_to_pr_branch
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}

      - name: Wait until pull request branch is in sync with local repository
        if: inputs.commit_bottles_to_pr_branch
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}
        run: |
          local_head="$(git rev-parse HEAD)"
          echo "::notice ::Local repository HEAD: $local_head"

          attempt=0
          max_attempts=10
          timeout=1

          # Wait (with exponential backoff) until the PR branch is in sync
          while [ "$attempt" -lt "$max_attempts" ]
          do
            remote_head="$(git ls-remote origin pull/${{inputs.pull_request}}/head | cut -f1)"
            echo "::notice ::Pull request HEAD: $remote_head"
            if [ "$local_head" = "$remote_head" ]
            then
              success=1
              break
            fi
            echo "::notice ::Remote repository not in sync. Checking again in ${timeout}s..."
            sleep "$timeout"
            attempt=$(( attempt + 1 ))
            timeout=$(( timeout * 2 ))
          done

          # One last check...
          if [ -z "$success" ] && [ "$local_head" != "$(git ls-remote origin pull/${{inputs.pull_request}}/head | cut -f1)" ]
          then
            echo "::error ::No attempts remaining. Giving up."
            exit 1
          fi

      # TODO: uncomment this once automerge is enabled again.
      # - name: Enable PR automerge
      #   if: inputs.commit_bottles_to_pr_branch
      #   env:
      #     GH_TOKEN: ${{secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN}}
      #   working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}
      #   run: gh pr merge --auto --merge '${{inputs.pull_request}}'

      - name: Post comment on failure
        if: ${{failure() && inputs.commit_bottles_to_pr_branch}}
        uses: Homebrew/actions/post-comment@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          issue: ${{github.event.inputs.pull_request}}
          body: ":warning: @${{github.actor}} [Failed to enable automerge.](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})"
          bot_body: ":warning: [Failed to enable automerge.](${{github.event.repository.html_url}}/actions/runs/${{github.run_id}})"
          bot: BrewTestBot
